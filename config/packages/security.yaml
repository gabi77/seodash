security:
  encoders:
    App\Entity\User: bcrypt
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

  role_hierarchy:
    ROLE_ADMIN:       ROLE_USER
    ROLE_SUPER_ADMIN: ROLE_ADMIN
  providers:
    fos_userbundle:
      id: fos_user.user_provider.username
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: true
      logout: true
      logout_on_user_change: true
      pattern: ^/
      user_checker: security.user_checker
      form_login:
        remember_me:     true            # On active la possibilité du "Se souvenir de moi" (désactivé par défaut)
        csrf_token_generator: security.csrf.token_manager

      # activate different ways to authenticate

      # http_basic: true
      # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

      # form_login: true
      # https://symfony.com/doc/current/security/form_login_setup.html

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
  - { path: ^/$, roles: ROLE_USER }
  - { path: ^/logistique, roles: ROLE_USER }
  - { path: ^/profile, roles: ROLE_USER }
  - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
  - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
  - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
  - { path: fos_user_security_logout, roles: IS_AUTHENTICATED_ANONYMOUSLY }



# security:
#     encoders:
#         App\Entity\User: bcrypt

#     providers:
#         database_users:
#             entity: { class: App\Entity\User, property: username }

#     firewalls:
#         dev:
#             pattern: ^/(_(profiler|wdt)|css|images|js)/
#             security: false

#         main:
#             # les urls auxquels s'appliquent ce firewall, dans ce cas, ce sont toutes les urls
#             pattern: ^/

#             # La connexion n'est pas requise sur toutes les pages
#             # par exemple la page d'accueil
#             anonymous: true

#             form_login:
#                 # Le nom de la route de la page de connexion
#                 check_path: security_login
#                 # Le nom de la route où se trouve le formulaire de connexion
#                 # Si un utilisateur tente d'acceder à une page protégée sans en avoir les droits
#                 # il sera redirigé sur cette page
#                 login_path: security_login
#                 # Securisation des formulaires
#                 csrf_token_generator: security.csrf.token_manager
#                 # La page par defaut apres une connexion reussie
#                 default_target_path: admin

#             logout:
#                 # La route où se trouve le process de deconnexion
#                 path: security_logout
#                 # La route sur laquelle doit etre rediriger l'utilisateur apres une deconnexion
#                 target: index

#     access_control:
#         # Les regles de securité
#         # Là dans ce cas seul les utilisateurs ayant le rôle ROLE_ADMIN
#         # peuvent acceder à toutes les pages commençant par /admin
#         - { path: '^/admin', roles: ROLE_ADMIN }
